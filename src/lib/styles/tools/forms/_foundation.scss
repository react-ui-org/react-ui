// 1. Get ready for positioning of bottom line and caret.
// 2. Override hover style of disabled input.
// 3. Always prefer the `size` and `max` attribute when defined. Use CSS for sizing to normalize
//    resulting width across browsers.
// 4. Let inputs properly fit various layout scenarios.
// 5. Leave out space for Select Field caret.
// 6. Align label to input baseline. Achieved with `padding-top` since `align-items: baseline`
//    unfortunately doesn't work for blank text inputs in Safari.
// 7. Don't let text alignment be affected by a parent.

@use '../../settings/forms' as settings;
@use '../../settings/forms-theme' as theme;
@use '../../tools/caret';
@use '../spacing';
@use '../transition';
@use 'states';

@mixin field() {
  text-align: left; // 7.
}

@mixin field-label() {
  padding-top: calc(#{theme.$field-border-width} + var(--rui-local-padding-vertical)); // 6.
}

@mixin field-label-required() {
  &::after {
    content: theme.$field-required-sign;
    color: theme.$field-required-sign-color;
  }
}

@mixin field-input-container() {
  position: relative; // 1.
  display: inline-flex;
  min-width: 0; // 4.
  max-width: 100%; // 4.
}

@mixin field-input() {
  @include transition.add((opacity, color, border-color, background-color, box-shadow));

  width: theme.$field-input-width;
  min-width: theme.$field-input-min-width;
  max-width: 100%; // 4.
  height: var(--rui-local-height);
  padding: var(--rui-local-padding-vertical) var(--rui-local-padding-horizontal);
  font-weight: settings.$field-font-weight;
  font-size: var(--rui-local-font-size);
  line-height: settings.$field-line-height;
  font-family: settings.$field-font-family;
  vertical-align: middle;
  border: theme.$field-border-width solid theme.$field-border-color;
  border-radius: theme.$field-border-radius;
  box-shadow: none;
  appearance: none;

  &::placeholder {
    opacity: 1;
    color: theme.$field-placeholder-color;
  }

  &:hover {
    border-color: theme.$field-hover-border-color;
  }

  &:focus {
    border-color: theme.$field-focus-border-color;
  }

  &:disabled {
    @include states.field-disabled();

    border-color: theme.$field-border-color; // 2.
  }
}

@mixin field-input-text() {
  &[max],
  &[size] {
    min-width: auto; // 3.
  }

  &[max] {
    width:
      calc(
        1ch * var(--rui-custom-input-size)
        + #{settings.$field-input-number-arrows-width}
        + 2 * var(--rui-local-padding-horizontal)
        + 2 * #{theme.$field-border-width}
      ); // 3.
  }

  &[size] {
    width:
      calc(
        1ch * var(--rui-custom-input-size)
        + 2 * var(--rui-local-padding-horizontal)
        + 2 * #{theme.$field-border-width}
      ); // 3.
  }
}

@mixin field-input-textarea() {
  resize: vertical;

  &[cols] {
    min-width: auto;
  }
}

@mixin field-input-select() {
  padding-right: calc(#{settings.$field-caret-size} + #{spacing.of(2)}); // 5.
  appearance: none;

  &::-ms-expand {
    display: none;
  }
}

@mixin field-input-select-option() {
  option:disabled {
    color: theme.$field-disabled-select-option-color;
  }
}

@mixin field-caret() {
  @include transition.add((border-color));

  position: absolute; // 1.
  top: theme.$field-border-width;
  right: theme.$field-border-width;
  bottom: theme.$field-border-width;
  display: flex;
  align-items: center;
  justify-content: center;
  width: calc(#{settings.$field-caret-size} - 2 * #{theme.$field-border-width});
  border-top-right-radius: theme.$field-border-radius;
  border-bottom-right-radius: theme.$field-border-radius;
  pointer-events: none;

  .input:disabled ~ & {
    @include states.field-disabled();
  }
}

@mixin field-caret-icon() {
  @include caret.create();
}

@mixin field-bottom-line() {
  @include transition.add((transform, opacity), 180ms);

  position: absolute;
  bottom: 0;
  opacity: 0;
  width: 100%;
  height: settings.$field-bottom-line-height;
  transform: scaleX(0);
  transform-origin: center center;
  pointer-events: none;

  .input:focus ~ & {
    opacity: 1;
    background-color: theme.$field-focus-border-color;
    transform: scaleX(1);
  }
}

@mixin field-help-text() {
  font-style: theme.$field-help-text-font-style;
  font-size: theme.$field-help-text-font-size;
  line-height: settings.$field-help-text-line-height;
  color: theme.$field-help-text-color;
}
