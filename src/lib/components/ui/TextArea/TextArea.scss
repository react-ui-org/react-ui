@use '../../../styles/tools/accessibility';
@use '../../../styles/tools/forms/foundation';
@use '../../../styles/tools/forms/layouts';
@use '../../../styles/tools/forms/relationships';
@use '../../../styles/tools/forms/sizes';
@use '../../../styles/tools/forms/states';
@use '../../../styles/tools/forms/variants';

// Foundation
.root {
  @include foundation.field();
  @include relationships.field-horizontal-neighbor();
}

.label {
  @include foundation.field-label();
}

.inputContainer {
  @include foundation.field-input-container();
}

.input {
  @include foundation.field-input();
  @include foundation.field-input-textarea();
}

.bottomLine {
  @include foundation.field-bottom-line();
}

.helpText,
.validationText {
  @include foundation.field-help-text();
}

// Variants
.rootVariantFilled .input {
  @include variants.field-input-variant(filled);
}

.rootVariantOutline .input {
  @include variants.field-input-variant(outline);
}

// States
.isRootRequired .label {
  @include foundation.field-label-required();
}

.isRootStateInvalid {
  @include states.field-state(invalid);
}

.isRootStateValid {
  @include states.field-state(valid);
}

.isRootStateWarning {
  @include states.field-state(warning);
}

// Invisible label
.isLabelHidden {
  @include accessibility.hide-text();
}

// Layouts
.rootLayoutHorizontal {
  @include layouts.field-layout-horizontal();
}

.rootLayoutVertical {
  @include layouts.field-layout-vertical();
}

.isRootFullWidth {
  @include layouts.field-full-width();
  @include relationships.field-vertical-neighbor();
}

.isRootInFormLayout {
  @include layouts.field-in-form-layout();
}

// Sizes
.rootSizeSmall {
  @include sizes.field-size(small, $is-multiline: true);
}

.rootSizeMedium {
  @include sizes.field-size(medium, $is-multiline: true);
}

.rootSizeLarge {
  @include sizes.field-size(large, $is-multiline: true);
}
