// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering renders correctly with a single child 1`] = `
<WithTranslationContextComponent
  translations={null}
>
  <ScrollView
    arrows={false}
    arrowsScrollStep={200}
    autoScroll="off"
    customEndShadowStyle={Object {}}
    customNextArrow={null}
    customPrevArrow={null}
    customStartShadowStyle={Object {}}
    debounce={50}
    direction="vertical"
    scrollbar={true}
    shadowColor={
      Object {
        "alpha": 1,
        "blue": 255,
        "green": 255,
        "red": 255,
      }
    }
    shadowSize="2em"
    translations={
      Object {
        "next": "Next",
        "previous": "Previous",
      }
    }
  >
    <div
      className="root    isRootVertical"
      style={
        Object {
          "--rui-local-arrow-color": "inherit",
          "--rui-local-end-shadow-background": "linear-gradient(to top, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0))",
          "--rui-local-end-shadow-box-shadow": "none",
          "--rui-local-shadow-height": "2em",
          "--rui-local-shadow-width": "auto",
          "--rui-local-start-shadow-background": "linear-gradient(to bottom, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0))",
          "--rui-local-start-shadow-box-shadow": "none",
        }
      }
    >
      <div
        className="viewport"
      >
        <div
          className="content"
        >
          <span>
            content
          </span>
        </div>
      </div>
      <div
        aria-hidden={true}
        className="scrollingShadows"
      />
    </div>
  </ScrollView>
</WithTranslationContextComponent>
`;

exports[`rendering renders correctly with all props 1`] = `
<WithTranslationContextComponent
  arrows={true}
  arrowsColor="blue"
  arrowsScrollStep={300}
  customEndShadow={
    Object {
      "boxShadow": "0 0 10px rgba(0, 0, 0, 0.5)",
    }
  }
  customNextArrow={
    <span>
      →
    </span>
  }
  customPrevArrow={
    <span>
      ←
    </span>
  }
  customStartShadow={
    Object {
      "background": "none",
    }
  }
  debounce={100}
  direction="horizontal"
  id="my-scrollview"
  scrollbar={false}
  shadowColor={
    Object {
      "alpha": 0.5,
      "blue": 122,
      "green": 122,
      "red": 122,
    }
  }
  shadowSize="100px"
  translations={null}
>
  <ScrollView
    arrows={true}
    arrowsColor="blue"
    arrowsScrollStep={300}
    autoScroll="off"
    customEndShadow={
      Object {
        "boxShadow": "0 0 10px rgba(0, 0, 0, 0.5)",
      }
    }
    customEndShadowStyle={Object {}}
    customNextArrow={
      <span>
        →
      </span>
    }
    customPrevArrow={
      <span>
        ←
      </span>
    }
    customStartShadow={
      Object {
        "background": "none",
      }
    }
    customStartShadowStyle={Object {}}
    debounce={100}
    direction="horizontal"
    id="my-scrollview"
    scrollbar={false}
    shadowColor={
      Object {
        "alpha": 0.5,
        "blue": 122,
        "green": 122,
        "red": 122,
      }
    }
    shadowSize="100px"
    translations={
      Object {
        "next": "Next",
        "previous": "Previous",
      }
    }
  >
    <div
      className="root   hasRootScrollbarDisabled isRootHorizontal"
      id="my-scrollview"
      style={
        Object {
          "--rui-local-arrow-color": "blue",
          "--rui-local-end-shadow-background": "linear-gradient(to left, rgba(122, 122, 122, 0.5), rgba(122, 122, 122, 0))",
          "--rui-local-end-shadow-box-shadow": "none",
          "--rui-local-shadow-height": "auto",
          "--rui-local-shadow-width": "100px",
          "--rui-local-start-shadow-background": "linear-gradient(to right, rgba(122, 122, 122, 0.5), rgba(122, 122, 122, 0))",
          "--rui-local-start-shadow-box-shadow": "none",
        }
      }
    >
      <div
        className="viewport"
      >
        <div
          className="content"
          id="my-scrollview__content"
        >
          <span>
            content 1
          </span>
          <span>
            content 2
          </span>
          <span>
            content 3
          </span>
        </div>
      </div>
      <div
        aria-hidden={true}
        className="scrollingShadows"
      />
      <button
        className="arrowPrev"
        id="my-scrollview__arrowPrevButton"
        onClick={[Function]}
        title="Previous"
        type="button"
      >
        <span>
          ←
        </span>
      </button>
      <button
        className="arrowNext"
        id="my-scrollview__arrowNextButton"
        onClick={[Function]}
        title="Next"
        type="button"
      >
        <span>
          →
        </span>
      </button>
    </div>
  </ScrollView>
</WithTranslationContextComponent>
`;

exports[`rendering renders correctly with arrows 1`] = `
<WithTranslationContextComponent
  arrows={true}
  arrowsColor="white"
  arrowsScrollStep={200}
  translations={null}
>
  <ScrollView
    arrows={true}
    arrowsColor="white"
    arrowsScrollStep={200}
    autoScroll="off"
    customEndShadowStyle={Object {}}
    customNextArrow={null}
    customPrevArrow={null}
    customStartShadowStyle={Object {}}
    debounce={50}
    direction="vertical"
    scrollbar={true}
    shadowColor={
      Object {
        "alpha": 1,
        "blue": 255,
        "green": 255,
        "red": 255,
      }
    }
    shadowSize="2em"
    translations={
      Object {
        "next": "Next",
        "previous": "Previous",
      }
    }
  >
    <div
      className="root    isRootVertical"
      style={
        Object {
          "--rui-local-arrow-color": "white",
          "--rui-local-end-shadow-background": "linear-gradient(to top, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0))",
          "--rui-local-end-shadow-box-shadow": "none",
          "--rui-local-shadow-height": "2em",
          "--rui-local-shadow-width": "auto",
          "--rui-local-start-shadow-background": "linear-gradient(to bottom, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0))",
          "--rui-local-start-shadow-box-shadow": "none",
        }
      }
    >
      <div
        className="viewport"
      >
        <div
          className="content"
        >
          <span>
            content
          </span>
        </div>
      </div>
      <div
        aria-hidden={true}
        className="scrollingShadows"
      />
      <button
        className="arrowPrev"
        onClick={[Function]}
        title="Previous"
        type="button"
      >
        <span
          aria-hidden={true}
          className="arrowIcon"
        />
      </button>
      <button
        className="arrowNext"
        onClick={[Function]}
        title="Next"
        type="button"
      >
        <span
          aria-hidden={true}
          className="arrowIcon"
        />
      </button>
    </div>
  </ScrollView>
</WithTranslationContextComponent>
`;

exports[`rendering renders correctly with multiple children 1`] = `
<WithTranslationContextComponent
  translations={null}
>
  <ScrollView
    arrows={false}
    arrowsScrollStep={200}
    autoScroll="off"
    customEndShadowStyle={Object {}}
    customNextArrow={null}
    customPrevArrow={null}
    customStartShadowStyle={Object {}}
    debounce={50}
    direction="vertical"
    scrollbar={true}
    shadowColor={
      Object {
        "alpha": 1,
        "blue": 255,
        "green": 255,
        "red": 255,
      }
    }
    shadowSize="2em"
    translations={
      Object {
        "next": "Next",
        "previous": "Previous",
      }
    }
  >
    <div
      className="root    isRootVertical"
      style={
        Object {
          "--rui-local-arrow-color": "inherit",
          "--rui-local-end-shadow-background": "linear-gradient(to top, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0))",
          "--rui-local-end-shadow-box-shadow": "none",
          "--rui-local-shadow-height": "2em",
          "--rui-local-shadow-width": "auto",
          "--rui-local-start-shadow-background": "linear-gradient(to bottom, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0))",
          "--rui-local-start-shadow-box-shadow": "none",
        }
      }
    >
      <div
        className="viewport"
      >
        <div
          className="content"
        >
          <span>
            content 1
          </span>
          <span>
            content 2
          </span>
          <span>
            content 3
          </span>
        </div>
      </div>
      <div
        aria-hidden={true}
        className="scrollingShadows"
      />
    </div>
  </ScrollView>
</WithTranslationContextComponent>
`;

exports[`rendering renders correctly with scrollbar disabled 1`] = `
<WithTranslationContextComponent
  scrollbar={false}
  translations={null}
>
  <ScrollView
    arrows={false}
    arrowsScrollStep={200}
    autoScroll="off"
    customEndShadowStyle={Object {}}
    customNextArrow={null}
    customPrevArrow={null}
    customStartShadowStyle={Object {}}
    debounce={50}
    direction="vertical"
    scrollbar={false}
    shadowColor={
      Object {
        "alpha": 1,
        "blue": 255,
        "green": 255,
        "red": 255,
      }
    }
    shadowSize="2em"
    translations={
      Object {
        "next": "Next",
        "previous": "Previous",
      }
    }
  >
    <div
      className="root   hasRootScrollbarDisabled isRootVertical"
      style={
        Object {
          "--rui-local-arrow-color": "inherit",
          "--rui-local-end-shadow-background": "linear-gradient(to top, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0))",
          "--rui-local-end-shadow-box-shadow": "none",
          "--rui-local-shadow-height": "2em",
          "--rui-local-shadow-width": "auto",
          "--rui-local-start-shadow-background": "linear-gradient(to bottom, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0))",
          "--rui-local-start-shadow-box-shadow": "none",
        }
      }
    >
      <div
        className="viewport"
      >
        <div
          className="content"
        >
          <span>
            content
          </span>
        </div>
      </div>
      <div
        aria-hidden={true}
        className="scrollingShadows"
      />
    </div>
  </ScrollView>
</WithTranslationContextComponent>
`;
