@import 'mixins';
@import 'theme';

.priorityDefault.variantPrimary {
  @include button-variant(default, primary);
}

.priorityDefault.variantSecondary {
  @include button-variant(default, secondary);
}

.priorityDefault.variantSuccess {
  @include button-variant(default, success);
}

.priorityDefault.variantWarning {
  @include button-variant(default, warning);
}

.priorityDefault.variantDanger {
  @include button-variant(default, danger);
}

.priorityDefault.variantDark {
  @include button-variant(default, dark);
}

.priorityOutline.variantPrimary {
  @include button-variant(outline, primary);
}

.priorityOutline.variantSecondary {
  @include button-variant(outline, secondary);
}

.priorityOutline.variantSuccess {
  @include button-variant(outline, success);
}

.priorityOutline.variantWarning {
  @include button-variant(outline, warning);
}

.priorityOutline.variantDanger {
  @include button-variant(outline, danger);
}

.priorityOutline.variantDark {
  @include button-variant(outline, dark);
}

.priorityFlat.variantPrimary {
  @include button-variant(flat, primary);
}

.priorityFlat.variantSecondary {
  @include button-variant(flat, secondary);
}

.priorityFlat.variantSuccess {
  @include button-variant(flat, success);
}

.priorityFlat.variantWarning {
  @include button-variant(flat, warning);
}

.priorityFlat.variantDanger {
  @include button-variant(flat, danger);
}

.priorityFlat.variantDark {
  @include button-variant(flat, dark);
}

.priorityLink {
  @include button-link();
}

.priorityDefault.isRootGrouped:not(:first-child)::before,
.priorityFlat.isRootGrouped:not(:first-child)::before {
  content: '';
  position: absolute;
  top: calc(-1 * #{$button-border-width});
  bottom: calc(-1 * #{$button-border-width});
  left: calc(-1 * #{$button-border-width});
  border-left: $button-border-width solid $button-group-separator-color;
}

.priorityFlat.isRootGrouped:not(:first-child)::before {
  border-left-color: currentColor;
}
