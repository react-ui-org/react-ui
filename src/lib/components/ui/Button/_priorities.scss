@use 'settings';
@use 'theme';
@use 'tools';

.priorityFilled.variantPrimary {
  @include tools.button-variant(filled, primary);
}

.priorityFilled.variantSecondary {
  @include tools.button-variant(filled, secondary);
}

.priorityFilled.variantSuccess {
  @include tools.button-variant(filled, success);
}

.priorityFilled.variantWarning {
  @include tools.button-variant(filled, warning);
}

.priorityFilled.variantDanger {
  @include tools.button-variant(filled, danger);
}

.priorityFilled.variantDark {
  @include tools.button-variant(filled, dark);
}

.priorityOutline.variantPrimary {
  @include tools.button-variant(outline, primary);
}

.priorityOutline.variantSecondary {
  @include tools.button-variant(outline, secondary);
}

.priorityOutline.variantSuccess {
  @include tools.button-variant(outline, success);
}

.priorityOutline.variantWarning {
  @include tools.button-variant(outline, warning);
}

.priorityOutline.variantDanger {
  @include tools.button-variant(outline, danger);
}

.priorityOutline.variantDark {
  @include tools.button-variant(outline, dark);
}

.priorityFlat.variantPrimary {
  @include tools.button-variant(flat, primary);
}

.priorityFlat.variantSecondary {
  @include tools.button-variant(flat, secondary);
}

.priorityFlat.variantSuccess {
  @include tools.button-variant(flat, success);
}

.priorityFlat.variantWarning {
  @include tools.button-variant(flat, warning);
}

.priorityFlat.variantDanger {
  @include tools.button-variant(flat, danger);
}

.priorityFlat.variantDark {
  @include tools.button-variant(flat, dark);
}

.priorityLink {
  @include tools.button-link();
}

.priorityFilled.isRootGrouped:not(:first-child)::before,
.priorityFlat.isRootGrouped:not(:first-child)::before {
  content: '';
  position: absolute;
  top: calc(-1 * #{theme.$border-width});
  bottom: calc(-1 * #{theme.$border-width});
  left: calc(-1 * #{theme.$border-width});
  z-index: map-get(settings.$group-z-indexes, separator);
  border-left: var(--local-separator-width) solid var(--local-separator-color);
  transform: translateX(calc(-0.5 * var(--local-gap) - 50%));
}

.priorityFilled.isRootGrouped:not(:first-child) {
  --local-gap: #{theme.$group-filled-gap};
  --local-separator-width: #{theme.$group-filled-separator-width};
  --local-separator-color: #{theme.$group-filled-separator-color};
}

.priorityFlat.isRootGrouped:not(:first-child) {
  --local-gap: #{theme.$group-flat-gap};
  --local-separator-width: #{theme.$group-flat-separator-width};
  --local-separator-color: #{theme.$group-flat-separator-color};
}

.priorityOutline.isRootGrouped:not(:first-child) {
  --local-gap: #{theme.$group-outline-gap};
}
