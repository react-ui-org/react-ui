// 1. Get ready for position of corner elements and group separator.
// 2. Icon buttons should be squares.

@import '../../../styles/tools/explode';
@import '../../../styles/tools/forms/states';
@import '../../../styles/tools/reset';
@import '../../../styles/tools/transitions';
@import 'theme';
@import 'variables';

@mixin button() {
  @include transition((opacity, color, border, background, box-shadow));

  position: relative; // 1.
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: $button-font-weight;
  line-height: $button-line-height;
  font-family: $button-font-family;
  text-align: center;
  text-overflow: ellipsis;
  text-decoration: none;
  text-transform: $button-text-transform;
  white-space: nowrap;
  vertical-align: middle;
  border: $button-border-width solid transparent;
  border-radius: $button-border-radius;
  user-select: none;
  cursor: pointer;

  &:hover,
  &:focus {
    text-decoration: none;
  }

  &:disabled {
    @include form-field-disabled();
  }

  &:-moz-focusring {
    outline: 0;
  }
}

@mixin button-unset() {
  @include reset-button();

  font-weight: unset;
  line-height: unset;
  font-family: unset;
  text-transform: unset;
  vertical-align: unset;
  user-select: unset;
  transition: unset;
}

@mixin button-link() {
  $properties: map-get($button-variants, link);

  @include button-unset();

  text-decoration: map-get(map-get($properties, default), text-decoration);
  color: map-get(map-get($properties, default), color);

  &:not(:disabled):hover,
  &:not(:disabled):focus {
    text-decoration: map-get(map-get($properties, hover), text-decoration);
    color: map-get(map-get($properties, hover), color);
  }
}

@mixin button-size($size) {
  $properties: map-get($button-sizes, $size);

  height: map-get($properties, height);
  padding: 0 map-get($properties, padding-x);
  font-size: map-get($properties, font-size);

  &.withLabelHidden,
  &.withLabelHiddenMobile {
    width: map-get($properties, height); // 2.
    padding-right: 0;
    padding-left: 0;
  }

  &.withLabelHiddenMobile {
    @include breakpoint-up($button-breakpoint) {
      width: auto;
      padding-right: map-get($properties, padding-x);
      padding-left: map-get($properties, padding-x);
    }
  }
}

@mixin button-variant($priority, $variant) {
  $priority-variants: map-get($button-variants, $priority);
  $variant-states: map-get($priority-variants, $variant);

  @include explode(map-get($variant-states, default));

  &:hover,
  &:focus {
    @include explode(map-get($variant-states, hover));
  }

  &:active {
    @include explode(map-get($variant-states, active));
  }

  &:disabled {
    @include explode(map-get($variant-states, default));
  }
}
