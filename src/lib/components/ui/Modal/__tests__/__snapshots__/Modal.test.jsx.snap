// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering renders correctly with all props except translations 1`] = `
<WithTranslationContextComponent
  actions={
    Array [
      Object {
        "clickHandler": [Function],
        "label": "Action",
      },
    ]
  }
  closeHandler={[Function]}
  id="custom-id"
  size="large"
  title="Modal title"
  translations={null}
>
  <Modal
    actions={
      Array [
        Object {
          "clickHandler": [Function],
          "label": "Action",
        },
      ]
    }
    closeHandler={[Function]}
    id="custom-id"
    size="large"
    title="Modal title"
    translations={
      Object {
        "close": "Close",
      }
    }
  >
    <div
      className="overlay"
      id="custom-id"
      onClick={[Function]}
      onScroll={[Function]}
      role="presentation"
    >
      <div
        className="root
            isRootLarge"
        onClick={[Function]}
        role="presentation"
      >
        <div
          className="head"
        >
          <h3
            className="headTitle"
            id="custom-id__title"
          >
            Modal title
          </h3>
          <button
            className="close"
            id="custom-id__closeModalHeaderButton"
            onClick={[Function]}
            title="Close"
            type="button"
          >
            ×
          </button>
        </div>
        <div
          className="body"
          id="custom-id__content"
        >
          Modal content
        </div>
        <div
          className="footer"
        >
          <ForwardRef(withForwardedRef(Button))
            clickHandler={[Function]}
            key="Action"
            label="Action"
          >
            <Button
              afterLabel={null}
              beforeLabel={null}
              block={false}
              clickHandler={[Function]}
              disabled={false}
              endCorner={null}
              forwardedRef={null}
              grouped={false}
              label="Action"
              labelVisibility="all"
              loadingIcon={null}
              priority="default"
              size="medium"
              startCorner={null}
              type="button"
              variant="primary"
            >
              <button
                className="root
        priorityDefault
        sizeMedium
        variantPrimary"
                disabled={false}
                onClick={[Function]}
                title={null}
                type="button"
              >
                <span
                  className="label"
                >
                  Action
                </span>
              </button>
            </Button>
          </ForwardRef(withForwardedRef(Button))>
          <ForwardRef(withForwardedRef(Button))
            clickHandler={[Function]}
            id="custom-id__closeModalFooterButton"
            label="Close"
            priority="flat"
          >
            <Button
              afterLabel={null}
              beforeLabel={null}
              block={false}
              clickHandler={[Function]}
              disabled={false}
              endCorner={null}
              forwardedRef={null}
              grouped={false}
              id="custom-id__closeModalFooterButton"
              label="Close"
              labelVisibility="all"
              loadingIcon={null}
              priority="flat"
              size="medium"
              startCorner={null}
              type="button"
              variant="primary"
            >
              <button
                className="root
        priorityFlat
        sizeMedium
        variantPrimary"
                disabled={false}
                id="custom-id__closeModalFooterButton"
                onClick={[Function]}
                title={null}
                type="button"
              >
                <span
                  className="label"
                  id="custom-id__closeModalFooterButton__labelText"
                >
                  Close
                </span>
              </button>
            </Button>
          </ForwardRef(withForwardedRef(Button))>
        </div>
      </div>
    </div>
  </Modal>
</WithTranslationContextComponent>
`;

exports[`rendering renders correctly with all props except translations and with a loading icon 1`] = `
<WithTranslationContextComponent
  actions={
    Array [
      Object {
        "clickHandler": [Function],
        "label": "Action",
        "loadingIcon": <span
          className="icon"
        />,
      },
    ]
  }
  closeHandler={[Function]}
  id="custom-id"
  size="small"
  title="Modal title"
  translations={null}
>
  <Modal
    actions={
      Array [
        Object {
          "clickHandler": [Function],
          "label": "Action",
          "loadingIcon": <span
            className="icon"
          />,
        },
      ]
    }
    closeHandler={[Function]}
    id="custom-id"
    size="small"
    title="Modal title"
    translations={
      Object {
        "close": "Close",
      }
    }
  >
    <div
      className="overlay"
      id="custom-id"
      onClick={[Function]}
      onScroll={[Function]}
      role="presentation"
    >
      <div
        className="root
            isRootSmall"
        onClick={[Function]}
        role="presentation"
      >
        <div
          className="head"
        >
          <h3
            className="headTitle"
            id="custom-id__title"
          >
            Modal title
          </h3>
          <button
            className="close"
            id="custom-id__closeModalHeaderButton"
            onClick={[Function]}
            title="Close"
            type="button"
          >
            ×
          </button>
        </div>
        <div
          className="body"
          id="custom-id__content"
        >
          Modal content
        </div>
        <div
          className="footer"
        >
          <ForwardRef(withForwardedRef(Button))
            clickHandler={[Function]}
            key="Action"
            label="Action"
            loadingIcon={
              <span
                className="icon"
              />
            }
          >
            <Button
              afterLabel={null}
              beforeLabel={null}
              block={false}
              clickHandler={[Function]}
              disabled={false}
              endCorner={null}
              forwardedRef={null}
              grouped={false}
              label="Action"
              labelVisibility="all"
              loadingIcon={
                <span
                  className="icon"
                />
              }
              priority="default"
              size="medium"
              startCorner={null}
              type="button"
              variant="primary"
            >
              <button
                className="root
        priorityDefault
        sizeMedium
        variantPrimary"
                disabled={true}
                onClick={[Function]}
                title={null}
                type="button"
              >
                <span
                  className="label"
                >
                  Action
                </span>
                <span
                  className="loadingIcon"
                >
                  <span
                    className="icon"
                  />
                </span>
              </button>
            </Button>
          </ForwardRef(withForwardedRef(Button))>
          <ForwardRef(withForwardedRef(Button))
            clickHandler={[Function]}
            id="custom-id__closeModalFooterButton"
            label="Close"
            priority="flat"
          >
            <Button
              afterLabel={null}
              beforeLabel={null}
              block={false}
              clickHandler={[Function]}
              disabled={false}
              endCorner={null}
              forwardedRef={null}
              grouped={false}
              id="custom-id__closeModalFooterButton"
              label="Close"
              labelVisibility="all"
              loadingIcon={null}
              priority="flat"
              size="medium"
              startCorner={null}
              type="button"
              variant="primary"
            >
              <button
                className="root
        priorityFlat
        sizeMedium
        variantPrimary"
                disabled={false}
                id="custom-id__closeModalFooterButton"
                onClick={[Function]}
                title={null}
                type="button"
              >
                <span
                  className="label"
                  id="custom-id__closeModalFooterButton__labelText"
                >
                  Close
                </span>
              </button>
            </Button>
          </ForwardRef(withForwardedRef(Button))>
        </div>
      </div>
    </div>
  </Modal>
</WithTranslationContextComponent>
`;

exports[`rendering renders correctly with mandatory props only 1`] = `
<WithTranslationContextComponent
  title="Modal title"
  translations={null}
>
  <Modal
    actions={Array []}
    closeHandler={null}
    size="medium"
    title="Modal title"
    translations={
      Object {
        "close": "Close",
      }
    }
  >
    <div
      className="overlay"
      onClick={[Function]}
      onScroll={[Function]}
      role="presentation"
    >
      <div
        className="root
            isRootMedium"
        onClick={[Function]}
        role="presentation"
      >
        <div
          className="head"
        >
          <h3
            className="headTitle"
          >
            Modal title
          </h3>
        </div>
        <div
          className="body"
        >
          Modal content
        </div>
        <div
          className="footer"
        />
      </div>
    </div>
  </Modal>
</WithTranslationContextComponent>
`;

exports[`rendering renders correctly with translations 1`] = `
<WithTranslationContextComponent
  closeHandler={[Function]}
  title="Modal title"
  translations={
    Object {
      "close": "Zavřít",
    }
  }
>
  <Modal
    actions={Array []}
    closeHandler={[Function]}
    size="medium"
    title="Modal title"
    translations={
      Object {
        "close": "Zavřít",
      }
    }
  >
    <div
      className="overlay"
      onClick={[Function]}
      onScroll={[Function]}
      role="presentation"
    >
      <div
        className="root
            isRootMedium"
        onClick={[Function]}
        role="presentation"
      >
        <div
          className="head"
        >
          <h3
            className="headTitle"
          >
            Modal title
          </h3>
          <button
            className="close"
            onClick={[Function]}
            title="Zavřít"
            type="button"
          >
            ×
          </button>
        </div>
        <div
          className="body"
        >
          Modal content
        </div>
        <div
          className="footer"
        >
          <ForwardRef(withForwardedRef(Button))
            clickHandler={[Function]}
            label="Zavřít"
            priority="flat"
          >
            <Button
              afterLabel={null}
              beforeLabel={null}
              block={false}
              clickHandler={[Function]}
              disabled={false}
              endCorner={null}
              forwardedRef={null}
              grouped={false}
              label="Zavřít"
              labelVisibility="all"
              loadingIcon={null}
              priority="flat"
              size="medium"
              startCorner={null}
              type="button"
              variant="primary"
            >
              <button
                className="root
        priorityFlat
        sizeMedium
        variantPrimary"
                disabled={false}
                onClick={[Function]}
                title={null}
                type="button"
              >
                <span
                  className="label"
                >
                  Zavřít
                </span>
              </button>
            </Button>
          </ForwardRef(withForwardedRef(Button))>
        </div>
      </div>
    </div>
  </Modal>
</WithTranslationContextComponent>
`;
