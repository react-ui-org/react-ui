// 1. The class name is intentionally singular because it's targeted by other mixins too.
// 2. Use a block-level display mode to prevent extra white space below grouped inputs in Safari.
// 3. Prevent individual inputs from overlapping inside narrow containers.

@use "../../styles/tools/form-fields/box-field-elements";
@use "../../styles/tools/form-fields/box-field-layout";
@use "../../styles/tools/form-fields/foundation";
@use "../../styles/tools/form-fields/variants";
@use "../../styles/tools/accessibility";
@use "theme";

.root {
    @include box-field-elements.input-container();
}

.label {
    @include foundation.label();
}

.inputGroup {
    --rui-local-inner-border-radius: #{theme.$inner-border-radius};

    display: flex; // 2.
    gap: theme.$gap;
}

// 1.
.validationText {
    @include foundation.help-text();
}

// States
.isRootStateInvalid {
    @include variants.validation(invalid);
}

.isRootStateValid {
    @include variants.validation(valid);
}

.isRootStateWarning {
    @include variants.validation(warning);
}

// Invisible label
.isLabelHidden {
    @include accessibility.hide-text();
}

// Layouts
.isRootLayoutVertical,
.isRootLayoutHorizontal {
    @include box-field-layout.vertical();
}

.isRootLayoutVertical .field,
.isRootLayoutHorizontal .field {
    max-width: none; // 3.
}

.isRootLayoutHorizontal {
    @include box-field-layout.horizontal();
}

.isRootInFormLayout {
    @include box-field-layout.in-form-layout();
}
