@use "../../styles/tools/form-fields/box-field-elements";
@use "../../styles/tools/form-fields/box-field-layout";
@use "../../styles/tools/form-fields/foundation";
@use "../../styles/tools/form-fields/inline-field-elements";
@use "../../styles/tools/form-fields/inline-field-layout";
@use "../../styles/tools/form-fields/variants";
@use "../../styles/tools/accessibility";
@use "../../styles/tools/reset";
@use "../../styles/tools/spacing";

// Foundation
.root {
    @include foundation.root();
    @include variants.visual(check);
}

.label,
.optionLabel {
    @include foundation.label();
}

.list {
    @include reset.list();
}

.option {
    @include inline-field-layout.field();
    @include inline-field-elements.min-tap-target($type: radio);
}

.input {
    @include inline-field-elements.check-input($type: radio);
}

.helpText,
.validationText {
    @include foundation.help-text();
}

.isRootRequired .label {
    @include foundation.label-required();
}

// States
.isRootStateInvalid {
    @include variants.validation(invalid);
}

.isRootStateValid {
    @include variants.validation(valid);
}

.isRootStateWarning {
    @include variants.validation(warning);
}

// Invisible label
.isLabelHidden {
    @include accessibility.hide-text();
}

// Layouts
.rootLayoutVertical,
.rootLayoutHorizontal {
    @include box-field-layout.vertical($has-list: true);
}

.rootLayoutHorizontal {
    @include box-field-layout.horizontal($has-min-tap-target: true);
}

.isRootFullWidth {
    @include box-field-layout.full-width();
}

.isRootInFormLayout {
    @include box-field-layout.in-form-layout();
}
